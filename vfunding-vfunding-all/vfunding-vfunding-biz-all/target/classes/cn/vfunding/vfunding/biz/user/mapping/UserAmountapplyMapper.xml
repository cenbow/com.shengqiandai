<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.vfunding.vfunding.biz.user.dao.UserAmountapplyMapper">
	<resultMap id="BaseResultMap"
		type="cn.vfunding.vfunding.biz.user.model.UserAmountapply">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="account" property="account" jdbcType="DECIMAL" />
		<result column="account_new" property="accountNew" jdbcType="DECIMAL" />
		<result column="account_old" property="accountOld" jdbcType="DECIMAL" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="addtime" property="addtime" jdbcType="VARCHAR" />
		<result column="verify_remark" property="verifyRemark"
			jdbcType="VARCHAR" />
		<result column="verify_time" property="verifyTime" jdbcType="VARCHAR" />
		<result column="verify_user" property="verifyUser" jdbcType="INTEGER" />
		<result column="addip" property="addip" jdbcType="VARCHAR" />
		<result column="limit" property="limit" jdbcType="INTEGER" />
		<result column="mortgagetype_id" property="mortgagetypeId"
			jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs"
		type="cn.vfunding.vfunding.biz.user.model.UserAmountapplyWithBLOBs"
		extends="BaseResultMap">
		<result column="content" property="content" jdbcType="LONGVARCHAR" />
		<result column="remark" property="remark" jdbcType="LONGVARCHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="realname" property="realname" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, type, account, account_new, account_old, status, addtime,
		verify_remark,
		verify_time, verify_user, addip, `limit`, mortgagetype_id
	</sql>
	<sql id="Blob_Column_List">
		content, remark
	</sql>

	<!-- 多参数查询 -->
	<select id="selectByParam" resultMap="ResultMapWithBLOBs"
		parameterType="cn.vfunding.vfunding.biz.user.model.UserAmountapply">
		select
			a.id, a.user_id, a.type, a.account, a.account_new, a.account_old, a.status,from_unixtime(a.addtime) as addtime,
		a.verify_remark,a.content,
		a.verify_time, a.verify_user, a.addip, a.`limit`, a.mortgagetype_id,b.username,b.realname,b.phone
		from rd_user_amountapply a
		left join rd_user b on a.user_id=b.user_id
		where 1=1
		<if test="id != null">
			and a.id = #{id,jdbcType=INTEGER}
		</if>
		<if test="type != null">
			and a.type = #{type,jdbcType=VARCHAR}
		</if>
		<if test="userId != null">
			and a.user_id = #{userId,jdbcType=INTEGER}
		</if>
		<if test="status != null">
			and a.status = #{status,jdbcType=INTEGER}
		</if>
		<if test="verifyTime != null">
			and a.verify_time = #{verifyTime,jdbcType=VARCHAR} 
		</if>
		order by a.addtime desc
	</select>
	<!-- 后台审核列表 -->
	<select id="selectAmountApplyListPage" resultMap="ResultMapWithBLOBs"
		parameterType="cn.vfunding.common.framework.utils.page.PageSearch">
		select ua.id as id,ua.type as type,ua.account as
		account,ua.account_new as account_new,ua.account_old as account_old,
		ua.status as status,DATE_FORMAT(from_unixtime(ua.addtime),'%Y-%m-%d
		%H:%i:%s') as addtime,
		ua.content as content,ua.remark as remark,u.username as verify_remark,ua.limit
		as `limit`,ua.mortgagetype_id as mortgagetype_id,u.phone as phone
		from rd_user_amountapply ua LEFT JOIN rd_user u on ua.user_id=u.user_id
		where 1=1
		<if test="entity.username != null">
			and u.username like concat('%',#{entity.username,jdbcType=VARCHAR},'%')
		</if>
		<if test="entity.status != null">
			and ua.status = #{entity.status,jdbcType=INTEGER}
		</if>
		<if test="entity.amountId != null and entity.amountId != ''">
			and ua.id = #{entity.amountId,jdbcType=INTEGER}
		</if>
		order by ua.addtime desc
	</select>

	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from rd_user_amountapply
		where id = #{id,jdbcType=INTEGER} order by addtime desc
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from rd_user_amountapply
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="cn.vfunding.vfunding.biz.user.model.UserAmountapplyWithBLOBs">
		insert into rd_user_amountapply (id, user_id, type,
		account, account_new, account_old,
		status, addtime, verify_remark,
		verify_time, verify_user, addip,
		`limit`, mortgagetype_id, content,
		remark)
		values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
		#{type,jdbcType=VARCHAR},
		#{account,jdbcType=DECIMAL}, #{accountNew,jdbcType=DECIMAL}, #{accountOld,jdbcType=DECIMAL},
		#{status,jdbcType=INTEGER}, #{addtime,jdbcType=VARCHAR},
		#{verifyRemark,jdbcType=VARCHAR},
		#{verifyTime,jdbcType=VARCHAR}, #{verifyUser,jdbcType=INTEGER}, #{addip,jdbcType=VARCHAR},
		#{limit,jdbcType=INTEGER}, #{mortgagetypeId,jdbcType=INTEGER},
		#{content,jdbcType=LONGVARCHAR},
		#{remark,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.vfunding.vfunding.biz.user.model.UserAmountapplyWithBLOBs">
		insert into rd_user_amountapply
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="account != null">
				account,
			</if>
			<if test="accountNew != null">
				account_new,
			</if>
			<if test="accountOld != null">
				account_old,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="addtime != null">
				addtime,
			</if>
			<if test="verifyRemark != null">
				verify_remark,
			</if>
			<if test="verifyTime != null">
				verify_time,
			</if>
			<if test="verifyUser != null">
				verify_user,
			</if>
			<if test="addip != null">
				addip,
			</if>
			<if test="limit != null">
				`limit`,
			</if>
			<if test="mortgagetypeId != null">
				mortgagetype_id,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="remark != null">
				remark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="account != null">
				#{account,jdbcType=DECIMAL},
			</if>
			<if test="accountNew != null">
				#{accountNew,jdbcType=DECIMAL},
			</if>
			<if test="accountOld != null">
				#{accountOld,jdbcType=DECIMAL},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="addtime != null">
				#{addtime,jdbcType=VARCHAR},
			</if>
			<if test="verifyRemark != null">
				#{verifyRemark,jdbcType=VARCHAR},
			</if>
			<if test="verifyTime != null">
				#{verifyTime,jdbcType=VARCHAR},
			</if>
			<if test="verifyUser != null">
				#{verifyUser,jdbcType=INTEGER},
			</if>
			<if test="addip != null">
				#{addip,jdbcType=VARCHAR},
			</if>
			<if test="limit != null">
				#{limit,jdbcType=INTEGER},
			</if>
			<if test="mortgagetypeId != null">
				#{mortgagetypeId,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.vfunding.vfunding.biz.user.model.UserAmountapplyWithBLOBs">
		update rd_user_amountapply
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="account != null">
				account = #{account,jdbcType=DECIMAL},
			</if>
			<if test="accountNew != null">
				account_new = #{accountNew,jdbcType=DECIMAL},
			</if>
			<if test="accountOld != null">
				account_old = #{accountOld,jdbcType=DECIMAL},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="addtime != null">
				addtime = #{addtime,jdbcType=VARCHAR},
			</if>
			<if test="verifyRemark != null">
				verify_remark = #{verifyRemark,jdbcType=VARCHAR},
			</if>
			<if test="verifyTime != null">
				verify_time = #{verifyTime,jdbcType=VARCHAR},
			</if>
			<if test="verifyUser != null">
				verify_user = #{verifyUser,jdbcType=INTEGER},
			</if>
			<if test="addip != null">
				addip = #{addip,jdbcType=VARCHAR},
			</if>
			<if test="limit != null">
				`limit` = #{limit,jdbcType=INTEGER},
			</if>
			<if test="mortgagetypeId != null">
				mortgagetype_id = #{mortgagetypeId,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs"
		parameterType="cn.vfunding.vfunding.biz.user.model.UserAmountapplyWithBLOBs">
		update rd_user_amountapply
		set user_id = #{userId,jdbcType=INTEGER},
		type = #{type,jdbcType=VARCHAR},
		account = #{account,jdbcType=DECIMAL},
		account_new = #{accountNew,jdbcType=DECIMAL},
		account_old = #{accountOld,jdbcType=DECIMAL},
		status = #{status,jdbcType=INTEGER},
		addtime = #{addtime,jdbcType=VARCHAR},
		verify_remark = #{verifyRemark,jdbcType=VARCHAR},
		verify_time = #{verifyTime,jdbcType=VARCHAR},
		verify_user = #{verifyUser,jdbcType=INTEGER},
		addip = #{addip,jdbcType=VARCHAR},
		`limit` = #{limit,jdbcType=INTEGER},
		mortgagetype_id = #{mortgagetypeId,jdbcType=INTEGER},
		content = #{content,jdbcType=LONGVARCHAR},
		remark = #{remark,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.vfunding.vfunding.biz.user.model.UserAmountapply">
		update rd_user_amountapply
		set user_id = #{userId,jdbcType=INTEGER},
		type = #{type,jdbcType=VARCHAR},
		account = #{account,jdbcType=DECIMAL},
		account_new = #{accountNew,jdbcType=DECIMAL},
		account_old = #{accountOld,jdbcType=DECIMAL},
		status = #{status,jdbcType=INTEGER},
		addtime = #{addtime,jdbcType=VARCHAR},
		verify_remark = #{verifyRemark,jdbcType=VARCHAR},
		verify_time = #{verifyTime,jdbcType=VARCHAR},
		verify_user = #{verifyUser,jdbcType=INTEGER},
		addip = #{addip,jdbcType=VARCHAR},
		`limit` = #{limit,jdbcType=INTEGER},
		mortgagetype_id = #{mortgagetypeId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>