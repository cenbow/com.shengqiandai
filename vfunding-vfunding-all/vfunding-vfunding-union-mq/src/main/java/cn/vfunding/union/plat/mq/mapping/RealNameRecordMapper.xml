<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.vfunding.union.plat.mq.dao.RealNameRecordMapper" >
  <resultMap id="BaseResultMap" type="cn.vfunding.union.plat.mq.model.RealNameRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="front_pic" property="frontPic" jdbcType="VARCHAR" />
    <result column="opposite_pic" property="oppositePic" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="id_number" property="idNumber" jdbcType="VARCHAR" />
    <result column="check_person" property="checkPerson" jdbcType="VARCHAR" />
    <result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, real_name, front_pic, opposite_pic, create_time, status, id_number, 
    check_person, check_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from realname_auth_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from realname_auth_record
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from realname_auth_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.vfunding.union.plat.mq.model.RealNameRecord" >
    insert into realname_auth_record (id, user_id, real_name, 
      front_pic, opposite_pic, create_time, 
      status, id_number, check_person, 
      check_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{realName,jdbcType=VARCHAR}, 
      #{frontPic,jdbcType=VARCHAR}, #{oppositePic,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{idNumber,jdbcType=VARCHAR}, #{checkPerson,jdbcType=VARCHAR}, 
      #{checkTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.vfunding.union.plat.mq.model.RealNameRecord" >
    insert into realname_auth_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="frontPic != null" >
        front_pic,
      </if>
      <if test="oppositePic != null" >
        opposite_pic,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="idNumber != null" >
        id_number,
      </if>
      <if test="checkPerson != null" >
        check_person,
      </if>
      <if test="checkTime != null" >
        check_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="frontPic != null" >
        #{frontPic,jdbcType=VARCHAR},
      </if>
      <if test="oppositePic != null" >
        #{oppositePic,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null" >
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="checkPerson != null" >
        #{checkPerson,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.vfunding.union.plat.mq.model.RealNameRecord" >
    update realname_auth_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="frontPic != null" >
        front_pic = #{frontPic,jdbcType=VARCHAR},
      </if>
      <if test="oppositePic != null" >
        opposite_pic = #{oppositePic,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null" >
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="checkPerson != null" >
        check_person = #{checkPerson,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.vfunding.union.plat.mq.model.RealNameRecord" >
    update realname_auth_record
    set user_id = #{userId,jdbcType=BIGINT},
      real_name = #{realName,jdbcType=VARCHAR},
      front_pic = #{frontPic,jdbcType=VARCHAR},
      opposite_pic = #{oppositePic,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      id_number = #{idNumber,jdbcType=VARCHAR},
      check_person = #{checkPerson,jdbcType=VARCHAR},
      check_time = #{checkTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>